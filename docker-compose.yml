version: '3.4'
services:
  traefik:
    image: traefik:v2.5
    command:
      - "--ping=true"
      - "--log.level=ERROR"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    networks:
      - 'tick'
    ports:
      - "${TRAEFIK_BIND_ADDRESS:-0.0.0.0}:${TRAEFIK_BIND_PORT:-80}:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.rule=PathPrefix(`/traefik/api`) || PathPrefix(`/traefik/dashboard`)'
      - 'traefik.http.routers.traefik.entrypoints=web'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.middlewares=traefik-auth'
      - 'traefik.http.middlewares.traefik-auth.basicauth.users=admin:{SHA}0tTNr469Z7oY3fDRwNoUXE2vTBw='
    depends_on:
      grafana:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    healthcheck:
      test: traefik healthcheck --ping
      start_period: 5s
      interval: 5s
      retries: 30
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  grafana:
    image: grafana/grafana-oss
    volumes:
      - grafana-var-lib-grafana:/var/lib/grafana
    env_file: .env.grafana
    networks:
      - 'tick'
    depends_on:
      influxdb:
        condition: service_healthy
      mail:
        condition: service_healthy
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/3000"
      start_period: 5s
      interval: 5s
      retries: 30
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  influxdb:
    image: influxdb:2.2
    volumes:
      - influxdb-var-lib-influxdb:/var/lib/influxdb
    networks:
      - 'tick'
    env_file: .env.influx
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/8086"
      start_period: 5s
      interval: 5s
      retries: 30
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.influxdb.entrypoints=web"
      - "traefik.http.routers.influxdb.rule=PathPrefix(`/`)"
      - "traefik.http.services.influxdb.loadbalancer.server.port=8086"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  mail:
    image: "namshi/smtp"
    env_file: .env.mail
    environment:
      PORT: 1025
    networks:
      - 'tick'
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/1025"
      start_period: 5s
      interval: 5s

networks:
  tick:

volumes:
  grafana-var-lib-grafana:
    driver: local
  influxdb-var-lib-influxdb:
    driver: local
